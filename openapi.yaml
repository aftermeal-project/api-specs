openapi: 3.0.3
info:
  title: Aftermeal API Docs
  version: 1.0.0

tags:
  - name: Users
    description: 사용자 관리 관련 엔드포인트
  - name: Activities
    description: 활동 관리 관련 엔드포인트
  - name: Activity Schedules
    description: 활동 일정 관리 관련 엔드포인트
  - name: Participations
    description: 참가 관리 관련 엔드포인트
  - name: Authentication
    description: 인증 관련 엔드포인트

paths:
  /users:
    post:
      tags:
        - Users
      operationId: "UserController_register"
      summary: "사용자 등록"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegistrationRequestDto"
      responses:
        '201':
          description: "OK"
        '400':
          description: "Bad Request"
        '404':
          description: "Not Found"
        '409':
          description: "Conflict"
        
    get:
      tags:
        - Users
      summary: 사용자 목록 조회
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserListResponseDto'

  /users/{userId}:
    put:
      tags:
        - Users
      summary: 사용자 수정
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequestDto'
      responses:
        '200':
          description: User updated successfully

    delete:
      tags:
        - Users
      summary: 사용자 삭제
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully

  /participations:
    post:
      operationId: 'ParticipationController_applyParticipation'
      summary: '참가 신청'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipationApplicationRequestDto'
      responses:
        '201':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  participationId:
                    type: integer
        '400':
          description: 'Bad Request'
        '404':
          description: 'Not Found'
      tags:
        - 'Participations'
      security:
        - bearer: []

  /participations/{participationId}:
    delete:
      operationId: 'ParticipationController_cancelParticipation'
      summary: '참가 신청 취소'
      parameters:
        - name: participationId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: 'OK'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Not Found'
      tags:
        - 'Participations'
      security:
        - bearer: []

  /activities:
    get:
      tags:
        - Activities
      summary: 활동 목록 조회
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityListResponseDto'

    post:
      tags:
        - Activities
      summary: 활동 생성
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityCreatationRequestDto'
      responses:
        '201':
          description: Activity created successfully

  /activities/{activityId}:
    put:
      tags:
        - Activities
      summary: 활동 수정
      parameters:
        - name: activityId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityUpdateRequestDto'
      responses:
        '200':
          description: Activity updated successfully

    delete:
      tags:
        - Activities
      summary: 활동 삭제
      parameters:
        - name: activityId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Activity deleted successfully

  /activity-schedules:
    get:
      tags:
        - Activity Schedules
      summary: 활동 일정 목록 조회
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityScheduleListResponseDto'

  /activity-schedules/{activityScheduleId}:
    get:
      tags:
        - Activity Schedules
      summary: 활동 일정 상세 조회
      parameters:
        - name: activityScheduleId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityScheduleResponseDto'

  /activity-schedules/{activityScheduleId}/status:
    patch:
      tags:
        - Activity Schedules
      summary: 활동 일정 상태 수정
      parameters:
        - name: activityScheduleId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityScheduleStatusUpdateDto'
      responses:
        '200':
          description: Activity updated successfully

  /participations/{participationId}/exclude:
    post:
      tags:
        - Participations
      summary: 참가자 제외
      parameters:
        - name: participationId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Participation request excluded successfully

  /auth/login:
    post:
      tags:
        - Authentication
      summary: 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'

  /auth/refresh:
    post:
      operationId: 'AuthController_refresh'
      summary: '토큰 갱신'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequestDto'
      responses:
        '201':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefreshResponseDto'
        '400':
          description: 'Bad Request'
      tags:
        - 'Authentication'

components:
  securitySchemes:
    bearer:
      scheme: 'bearer'
      bearerFormat: 'JWT'
      type: 'http'
  schemas:
    UserRegistrationRequestDto:
      type: 'object'
      properties:
        name:
          type: 'string'
        email:
          type: 'string'
        userType:
          type: 'string'
          enum:
            - 'STUDENT'
            - 'TEACHER'
        generationNumber:
          type: 'number'
          minimum: 1
        password:
          type: 'string'
      required:
        - name
        - email
        - userType
        - password
        
    UserListResponseDto:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
            enum: [USER, ADMIN]
        type:
          type: string
          enum: [STUDENT, TEACHER]
        status:
          type: string
          enum: [ACTIVATE, DEACTIVATE]
        generationNumber:
          type: integer
      required:
        - id
        - name
        - email
        - roles
        - type
        - status
        - generationNumber

    UserUpdateRequestDto:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum: [STUDENT, TEACHER]
        status:
          type: string
          enum: [ACTIVATE, DEACTIVATE]
        generationNumber:
          type: integer
      required:
        - name
        - type
        - status
        - generationNumber

    ActivityListResponseDto:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        location:
          type: string
        maxParticipants:
          type: integer
      required:
        - id
        - name
        - location
        - maxParticipants

    ActivityCreatationRequestDto:
      type: object
      properties:
        name:
          type: string
        maxParticipants:
          type: integer
        location:
          type: string
      required:
        - name
        - maxParticipants
        - location

    ActivityUpdateRequestDto:
      type: object
      properties:
        name:
          type: string
        maxParticipants:
          type: integer
        location:
          type: string
      required:
        - name
        - maxParticipants
        - location

    ActivityScheduleListResponseDto:
      type: object
      properties:
        activityScheduleId:
          type: integer
        name:
          type: string
        maxParticipants:
          type: integer
        currentParticipants:
          type: integer
        status:
          type: string
          enum: [SCHEDULED, IN_PROGRESS, CANCELED, COMPLETED]
        type:
          type: string
          enum: [LUNCH, DINNER]
        scheduledDate:
          type: string
          format: date
      required:
        - activityScheduleId
        - name
        - maxParticipants
        - currentParticipants
        - status
        - type
        - scheduledDate

    ActivityScheduleResponseDto:
      type: object
      properties:
        activityScheduleId:
          type: integer
        name:
          type: string
        maxParticipants:
          type: integer
        status:
          type: string
          enum: [SCHEDULED, IN_PROGRESS, CANCELED, COMPLETED]
        type:
          type: string
          enum: [LUNCH, DINNER]
        scheduledDate:
          type: string
          format: date
        participants:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              displayName:
                type: string
      required:
        - activityScheduleId
        - name
        - maxParticipants
        - status
        - type
        - scheduledDate
        - participants

    ActivityScheduleStatusUpdateDto:
      type: object
      properties:
        status:
          type: string
          enum: [SCHEDULED, IN_PROGRESS, CANCELED, COMPLETED]
      required:
        - status

    LoginRequestDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    LoginResponseDto:
      type: object
      properties:
        accessToken:
          type: string
        tokenType:
          type: string
        expiredIn:
          type: integer
        refreshToken:
          type: string
        user:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            roles:
              type: array
              items:
                type: string
                enum: [USER, ADMIN]
      required:
        - accessToken
        - tokenType
        - expiredIn
        - refreshToken
        - user

    TokenRefreshRequestDto:
      type: 'object'
      properties:
        refreshToken:
          type: 'string'
      required:
        - refreshToken

    TokenRefreshResponseDto:
      type: 'object'
      properties:
        accessToken:
          type: 'string'
        tokenType:
          type: 'string'
        expiredIn:
          type: 'number'
        refreshToken:
          type: 'string'
      required:
        - accessToken
        - tokenType
        - expiredIn
        - refreshToken

    ParticipationApplicationRequestDto:
      type: 'object'
      properties:
        activityId:
          type: 'number'
          minimum: 1
      required:
        - activityId

    ParticipationCancellationRequestDto:
      type: 'object'
      properties:
        activityId:
          type: 'number'
          minimum: 1
      required:
        - activityId
